Dynamic Malware Analysis 

# üß™ Dynamic Malware Analysis ‚Äì Let‚ÄôsDefend Simulation

This project documents a hands-on dynamic malware analysis performed in a virtual lab environment. The lab simulates a real-world malware infection and investigates its behavior using various analysis tools. The scenario was based on a simulation from [Let‚ÄôsDefend.io](https://letsdefend.io).

---

## üõ†Ô∏è Tools Used

- **Virtual Machine (VM)** with:
  - Process Monitor (**Procmon**)
  - Registry Snapshot Tool (**Regshot**)
  - Network Packet Analyzer (**Wireshark**)
  - Web Debugging Proxy (**Fiddler**)
  - Process Inspection Tool (**Process Hacker**)
- **ANY.RUN** ‚Äì Interactive malware sandbox
- **Base64 Decode Tools**
  - [Base64decode.org](https://www.base64decode.org/)
- **AI tools** (ChatGPT-assisted analysis & validation)

---

## üß© Objective

To analyze the behavior of a malicious executable and determine:

- What external services the malware communicates with
- What domain it queries to learn its public IP
- Which server it connects to (possibly for hijack or C2)
- What port/protocol it uses for outbound communication
- What credentials (username & password) it uses to authenticate

---

## üîç Key Findings

| Item                          | Details                                  |
|-------------------------------|------------------------------------------|
| **IP Check Domain**           | `ipinfo.io` (used to identify public IP) |
| **C2/SMTP Server**            | `xxxx.xxxxxxxxxx.com`               |
| **Port Used**                 | Port `xxx` (SMTP with authentication)    |
| **Username**                  | `xxxxxxxxxxxx`                         |
| **Password** (Base64 decoded) | `xxxxxxxxxxxx`                          |
| **Protocol**                  | SMTP (AUTH LOGIN) over TLS              |

---

## üì° Communication Flow

1. Malware initiates DNS query to resolve `ipinfo.io`.
2. Connects to `xxxx.xxxxxxxxxxx.com` via TCP port xxx.
3. Performs an `AUTH LOGIN` sequence using Base64-encoded credentials.
4. Mail server responds with `235 Authentication succeeded`, confirming successful login.

---

## üß† Outcome

This project demonstrates:
- Practical use of standard dynamic analysis tools
- Interpreting network and system behavior in a live infection
- Decoding obfuscated credentials from captured traffic
- Mapping indicators of compromise (IOCs)

---

## üìå Indicators of Compromise (IOCs)

- **C2 Server**: `xxxx.xxxxxxxxxxxxx.com`
- **Public IP Lookup**: `ipinfo.io`
- **Username**: `xxxxxxxxxxxx`
- **Password**: `xxxxxxxxxxxx`
- **Malware Traffic Port**: `xxx`

---

## üôå Credit

This analysis was completed as part of a Let‚ÄôsDefend.io simulation with additional support from ANY.RUN and external decoder tools. Special thanks to open-source communities for tools like Wireshark, and Procmon.
